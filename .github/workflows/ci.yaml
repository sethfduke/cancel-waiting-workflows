name: CI

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:


jobs:
  cancel-workflows:
    name: Cancel Workflow Runs
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Pull HXP Provider
        uses: ./.github/actions/cancel-workflows-action
        with:
          token: ${{ github.token }}
          event: "pull_request"
          branch: ${{ github.head_ref }}
          run_number: ${{ github.run_number }}
          cancel_waiting: true
      # - name: Cancel Waiting Workflows
      #   run: |
      #     for status in "waiting" "queued" "in_progress"; do
      #       curl -G \
      #       --data-urlencode 'branch=${{github.head_ref}}' \
      #       --data-urlencode 'event=pull_request' \
      #       --data-urlencode "status=$status" \
      #       --data-urlencode 'per_page=100' \
      #       --header 'Authorization: token ${{github.token}}' \
      #       --header 'accept: application/vnd.github.v3+json' \
      #       --silent \
      #       https://api.github.com/repos/${{github.repository}}/actions/runs \
      #       | jq --raw-output '.workflow_runs[] | select(.run_number!=${{github.run_number}}) | .url' \
      #       | for i in $(cat) ; do
      #         echo "Canceling workflow run id $i..."
      #         curl -X POST \
      #         --header 'Authorization: token ${{github.token}}' \
      #         --header 'accept: application/vnd.github.v3+json' \
      #         --silent \
      #         $i/cancel
      #       done
      #     done

  # deploy-dev:
  #   environment: dev
  #   name: Dev
  #   runs-on: ubuntu-latest
    
  #   steps:
  #     - uses: actions/checkout@v2
  #       with: { fetch-depth: 0 }
    
  #     - name: Echo
  #       run: echo "Dev Deploy"

  # deploy-staging:
  #   environment: staging
  #   name: Staging
  #   runs-on: ubuntu-latest
  #   needs: [deploy-dev]
    
  #   steps:
  #     - uses: actions/checkout@v2
  #       with: { fetch-depth: 0 }
    
  #     - name: Echo
  #       run: echo "Staging Deploy"

  # deploy-prod:
  #   environment: prod
  #   name: Prod
  #   runs-on: ubuntu-latest
  #   needs: [deploy-staging]
    
  #   steps:
  #     - uses: actions/checkout@v2
  #       with: { fetch-depth: 0 }
    
  #     - name: Echo
  #       run: echo "Prod Deploy"